

crm：
 服务于公司内部业务部门员工的客户管理，从线索到有意向到跟进到认证再到客户的整个过程。我主要负责
 1.线索池
2.员工分布
3.估计图
4.打卡管理
5.拜访管理、来访管理
6.服务合同等模块 。

订单系统：
需方用户从商城（pc、app、小程序）进行询价再到订单系统完成交易的整个过程，
需方用户在商城发起询价，生成询价单，询价单根据商品的三级经营类目自动生成报价单（上千条 ，mq异步技术），签合同、 生成对应销售单采购单
整个过程完成后会推送一条mq消息到物流服务（发货）、财务服务（分摊单据）、商城服务（会员权益、积分扣减）进行相应逻辑处理（mq的系统解偶技术）

面试官你好，我叫王彪 今年27岁  从事java工作4年了  一共在三家公司待过 在最近一份工作中主要担任Java开发 日常工作主要负责需求的拆解 跟随项目迭代负责部份数据库设计以及编码工作
在之前工作中有做过五六个项目 在最近一份工作中这家公司主要做的是一个电商平台，包含后台 pc h5 小程序几个端，模块有商品、订单、客户、财务、支付、消息等十来个服务，
主要负责商品、订单、客户等模块，项目主要采用springboot加springCloud的基础框架进行开发，使用nacos作为注册中心和配置中心，gateway作为网关，feign组件作为服务之间的调用关系，
rocketmq作为消息中间件，mysql作为数据存储，缓存使用redis。


第一家公司是在西湖区的杭州泰捷科技有限公司
公司是做汽车金融一块的。第二份工作是萧山区万郡绿建科技有限公司，主要做绿色建筑器材电商平台的 ，担任java开发岗位。
第三 得力 电商平台
平时喜欢跑跑步、打打球这样。

3.8 上午10点 医疗健康  没过
3.8 下午2点 顾家 18 待定  可能二面
3.8 下午3点 20-22 暂定 改明天下午3点
3.8 下午4点 20-22 顾家 #腾讯会议：991-428-244 等结果
3.8 下午5点 吉利汽车 20-22 暂定 #腾讯会议：187-724-482 通过
3.8 下午7点  阿里外包 22 没面
3.11 晚上8点 腾讯会议：167-575-044

3.9 下午2点  国家电网 22 #腾讯会议：972-356-821
3.9 下午3点   22

业务问题：
1、整体业务介绍，什么业务场景下用的技术技能 mq：下单通知 发货通知 redis：缓存业务健
2、从技术角度描述工作内容，用的什么框架、组件，值得拿出来介绍的业务

技术问题：
1、springCloud框架配置
    SpringCloud是在SpringBoot的基础上实现的开发工具,提供配置服务治理的微服务注册中心、网关、断路器、Feign、config等功能等功能
2、对切面的了解
    aop 代理 jdk cglib
3、索引失效问题及解决方法
    sql优化
    查询的字段避免用*号，指定需要的字段
    like使用右查询 like 'aa%' 放左边或者左右两边索引会失效（'%aa'、'%aa%'）
    使用join代替子查询
    使用union代替临时表
    使用索引
    读写分离
    主从复制
    分库分表

    索引失效
     不等、空值、or、like %放左索引失效变成全表扫描 字符串不加单引索引失效

4、对spring的理解
    Spring是一个开源的框架，轻量级 提供
    控制反转(IOC)Spring容器使用了工厂模式为我们创建了所需要的对象，我们使用时不需要自己去创建
    面向切面编程(AOP)进行方法增强权限验证，事物管理，记录日志

5、oracle的特性，根据他的特性，一般处理什么业务
6、redis权限、缓存，序列化器
7、hashmap的历史，1.7和1.8区别
    底层数据结构不一样，1.7是数组+链表，1.8则是数组+链表+红黑树结构（当链表长度大于8，转为红黑树）
    插入数据方式不一样，1.7中新增节点采用头插法，1.8中新增节点采用尾插法
    在扩容的时候：1.7在插入数据之前扩容，而1.8插入数据成功之后扩容。

8、线程安全和不安全、
9、同步锁原则性和可见性
原子性 用来保证一个程序操作被完整的执行，因为在CPU中是一条条指令执行，一个编码操作可能需要执行多条指令，具备原子性的操作，要么完整的被执行，要么不执行；
可见性 在共享数据被多线程使用时，各个线程的任务执行前，CPU会一次读取数据并保存CPU高速缓存中，如果某个线程修改了此共享数据的值，
        可见性就是使得共享数据发生变化后立即更新主存并通知其他使用该变量的线程，将缓存中的数据置为无效。

场景问题：
1、商城活动、秒杀等业务实现逻辑
     用户量：超大量、好人/坏人都有。
     保证高可用：双活；
     高并发：负载均衡、安全过滤。
     设计思路：
     静态页面：cdn、网站隐藏、页面压缩、缓存机制
     动态页面：排队、异步、资质抢购
     使用Redis预减库存减少对数据库的访问
     使用RabbitMQ消息队列缓冲，异步下单，增强用户体验
     具体实现步骤：
     系统初始化时，把商品库存数量加载到Redis里面去
     收到秒杀请求时，Redis预减库存（先减少Redis里面的库存数量，库存不足，则直接返回），如果库存已经到达临界值的时候，即=0，就不需要继续往下走，直接返回秒杀失败
     将请求放入消息队列，立即返回排队中
     将请求从消息队列取出来，生成订单，减少库存
     客户端轮询秒杀的结果，看是否秒杀成功

2、平时用什么手段保证代码的健壮性
    异常处理。 输入检查。  写法优化。
3、优化代码可从哪些方便考虑
    结合业务场景优化 sql优化 批量


arrylist为什么不是线程安全的
在多个线程进行add操作时可能会导致elementData数组越界


100个in怎么处理
 临时表 或者 or
项目中怎么考虑设计模式的
spring循环依赖
索引数据结构
executor 和 submit的区别

votile


